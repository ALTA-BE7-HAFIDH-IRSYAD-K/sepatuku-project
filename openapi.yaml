openapi: '3.0.2'
info:
  title:  Sepatuku API
  description: Group 3 Project
  version: '1.0.0'
servers:
  - description: Sepatuku-api
    url: https://52.87.250.27:8080/api/v1
    variables:
      environment: 
        default: dev
        enum:
          - "prod"
          - "dev"
tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User control
  - name: Products
    description: Product control
paths:
  /login:
    post:
      tags:
        - Auth
      summary: login user
      description: Login user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestLogin'
            examples:
              userData1:
                description: "Example data user"
                value: {
                  identifier: "nasrul@alterra.id",
                  password: "inipassword"
                }
              userData2:
                description: "Example data user"
                value: {
                  identifier: "nasrul123",
                  password: "inipassword"
                }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    data: {
                      token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co"
                    },
                    status: "success",
                    message: "login successfully",
                  }
                responseData2:
                  description: response success 2
                  value: {
                    data: {
                      token: "AyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co"
                    },
                    status: "success",
                    message: "login luccessfully",
                  }

        '400':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    status: "failed",
                    message: "user not found"
                  }
                responseData2:
                  description: response failed 2
                  value: {
                    code: 400,
                    status: "failed",
                    message: "password incorrect"
                  }
  /users:
    post:
      tags:
        - Users
      summary: register
      description: Register User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserData'
            examples:
              userData1:
                description: "Example data user"
                value: {
                  username: "sepatu",
                  email: "sepatu@mail.com",
                  password: "inipassword",
                  address: "Surabaya",
                  phone: "082333444555",
                  avatar: "ava"
                }
              userData2:
                description: "Example data user"
                value: {
                  ID: 2,
                  username: "Alta 2",
                  email: "alta2@alterra.id",
                  password: "inipassword2",
                  address: "Jakarta2",
                  phone: "082333444666",
                  avatar: "ava"
                }
      responses:
        '200':
          $ref: '#/components/responses/registerUserSuccess'
        '400':
          $ref: '#/components/responses/registerUserFailed'
    get:
      tags:
        - Users
      summary: get user profile
      description: Get User by Token
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/getUserProfileSuccess'
        '400':
          $ref: '#/components/responses/getUserProfileFailed'
    put:
      tags:
        - Users
      summary: edit user profile
      description: Edit User Profile by Token
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: bujang
                email:
                  type: string
                  example: bujang@mail.com
                password:
                  type: string
                  example: inipasswordbaru
                address:
                  type: string
                  example: ini alamat baru
                phone:
                  type: string
                  example: "082333444777"
                avatar:
                  type: string
                  example: avatar
      responses:
        '200':
          $ref: '#/components/responses/editUserProfileSuccess'
        '400':
          $ref: '#/components/responses/editUserProfileFailed'
    delete:
      tags:
        - Users
      summary: delete user
      description: Delete User by Token
      security:
        - JWTAuth: []
      responses:
        '200':
          $ref: '#/components/responses/responseSuccess'
        '400':
          $ref: '#/components/responses/responseFailed'
  /products:
    post:
      tags:
        - Products
      summary: create product
      description: Create User Product
      security:
        - JWTAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserData'
            examples:
              productData:
                description: "Example data product"
                value: {
                  name_product: "sepatu tua",
                  description: "sepatu ini bisa bikin tua",
                  price: 100000,
                  image: "images",
                  stock: 2
                }
      responses:
        '200':
          $ref: '#/components/responses/createProductSuccess'
        '400':
          $ref: '#/components/responses/createProductFailed'
    get:
      tags:
        - Products
      summary: get all product
      description: Create Product
      responses:
        '200':
          $ref: '#/components/responses/getAllProductSuccess'
        '400':
          $ref: '#/components/responses/getProductFailed'
  /products/{id}:
    get:
      tags:
        - Products
      summary: get product by id product
      description: Get Product
      parameters:
        - name: id
          description: id product
          in: path
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/getProductSuccess'
        '400':
          $ref: '#/components/responses/getProductFailed'
    put:
      tags:
        - Products
      summary: edit product
      description: Edit Product by ID Product
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: id product
          in: path
          schema:
            type: integer
            example: 1
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestUserData'
            examples:
              productData:
                description: "Example data product"
                value: {
                  name_product: "sepatu muda",
                  description: "sepatu ini bisa bikin muda",
                  price: 50000,
                  image: "images",
                  stock: 2
                }
      responses:
        '200':
          $ref: '#/components/responses/editProductSuccess'
        '400':
          $ref: '#/components/responses/editProductFailed'
    delete:
      tags:
        - Products
      summary: delete product
      description: delete Product
      security:
        - JWTAuth: []
      parameters:
        - name: id
          description: id product
          in: path
          schema:
            type: integer
            example: 1
          required: true
      responses:
        '200':
          $ref: '#/components/responses/responsedeleteSuccess'
        '400':
          $ref: '#/components/responses/responsedeleteFailed'
#==================================#
#    COMPONENT
#==================================#
components:

  #==================================#    
  #    JWT
  #==================================#
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  #==================================#
  #    SCHEMAS
  #==================================#
  schemas:
    requestLogin:
      type: object
      properties:
        "identifier":
          type: string
          example: admin
        "password":
          type: string
          example: admin
    requestUserData:
      type: object
      properties:
        "username":
          type: string
          example: admin
        "email":
          type: string
          example: admin@mail.com
        "password":
          type: string
          example: admin
        "address":
          type: string
          example: jl. sukamaju
        "phone":
          type: string
          example: "082333444555"
        "avatar":
          type: string
          example: ava
    requestProductData:
      type: object
      properties:
        "name_product":
          type: string
          example: sepatu tua
        "description":
          type: string
          example: sepatu ini bisa bikin tua
        "price":
          type: integer
          minLength: 100000
        "images":
          type: string
          example: images
        "stock":
          type: integer
          example: 2
    #==================================#
    #    RESPONSE USER
    #==================================#
  responses:
    responseSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: success delete user
    responseFailed:
      description: Failed Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed delete user
    registerUserSuccess:
      description: success to register
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  username:
                    type: string
                    example: sepatu
                  email:
                    type: string
                    example: sepatu@mail.com
                  address:
                    type: string
                    example: Surabaya
                  phone:
                    type: string
                    example: "082333444555"
                  avatar:
                    type: string
                    example: ava
              status:
                type: string
                example: success
              message:
                type: string
                example: register successfully
    registerUserFailed:
      description: failed to register
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: register failed
    getUserProfileSuccess:
      description: success get user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              data_products:
                type: array
                items: 
                  type: object
                  properties: 
                    ID:
                      type: integer
                      example: 1
                    CreatedAt:
                      type: string
                      example: "2022-04-07T21:08:54.73+07:00"
                    UpdatedAt:
                      type: string
                      example: "2022-04-07T21:08:54.73+07:00"       
                    name_product:
                      type: string
                      example: sepatu tua
                    descripton:
                      type: string
                      example: sepatu ini bisa bikin tua
                    price:
                      type: integer
                      example: 100000
                    image:
                      type: string
                      example: "images"
                    stock:
                      type: integer
                      example: 2
                    
              data_user:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  username:
                    type: string
                    example: sepatu
                  email:
                    type: string
                    example: sepatu@mail.com
                  address:
                    type: string
                    example: Surabaya
                  phone:
                    type: string
                    example: 082333444555
                  avatar:
                    type: string
                    example: ava
              status:
                type: string
                example: success
              message:
                type: string
                example: success get user profile
    getUserProfileFailed:
      description: fail to get user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed get user profile
    editUserProfileSuccess:
      description: success edit user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  username:
                    type: string
                    example: bujang
                  email:
                    type: string
                    example: bujang@mail.com
                  address:
                    type: string
                    example: ini alamat baru
                  phone:
                    type: string
                    example: "082333444777"
                  avatar:
                    type: string
                    example: avatar
              status:
                type: string
                example: success
              message:
                type: string
                example: success edit user profile
    editUserProfileFailed:
      description: fail to edit user profile
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed edit user profile
    #==================================#
    #    RESPONSE PRODUCT
    #==================================#
    editProductSuccess:
      description: success edit product
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  name_product:
                    type: string
                    example: sepatu muda
                  descripton:
                    type: string
                    example: sepatu ini bisa bikin muda
                  price:
                    type: integer
                    example: 50000
                  image:
                    type: string
                    example: "images"
                  stock:
                    type: integer
                    example: 2  
              status:
                type: string
                example: success
              message:
                type: string
                example: success edit product
    editProductFailed:
      description: failed edit product
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed edit product
    createProductSuccess:
      description: Operation Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  name_product:
                    type: string
                    example: sepatu tua
                  descripton:
                    type: string
                    example: sepatu ini bisa bikin tua
                  price:
                    type: integer
                    example: 100000
                  image:
                    type: string
                    example: "images"
                  stock:
                    type: integer
                    example: 2  
              status:
                type: string
                example: success
              message:
                type: string
                example: success create product
    createProductFailed:
      description: Operation Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed create product
    responsedeleteSuccess:
      description: Successful Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: success
              message:
                type: string
                example: success delete product
    responsedeleteFailed:
      description: Failed Operation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed delete product
    getProductSuccess:
      description: Operation Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  ID:
                    type: integer
                    example: 1
                  CreatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  UpdatedAt:
                    type: string
                    example: "2022-04-07T21:08:54.73+07:00"
                  name_product:
                    type: string
                    example: sepatu tua
                  descripton:
                    type: string
                    example: sepatu ini bisa bikin tua
                  price:
                    type: integer
                    example: 100000
                  image:
                    type: string
                    example: "images"
                  stock:
                    type: integer
                    example: 2  
              status:
                type: string
                example: success
              message:
                type: string
                example: success get product
    getAllProductSuccess:
      description: Operation Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    ID:
                      type: integer
                      example: 1
                    CreatedAt:
                      type: string
                      example: "2022-04-07T21:08:54.73+07:00"
                    UpdatedAt:
                      type: string
                      example: "2022-04-07T21:08:54.73+07:00"
                    name_product:
                      type: string
                      example: sepatu tua
                    descripton:
                      type: string
                      example: sepatu ini bisa bikin tua
                    price:
                      type: integer
                      example: 100000
                    image:
                      type: string
                      example: "images"
                    stock:
                      type: integer
                      example: 2  
              status:
                type: string
                example: success
              message:
                type: string
                example: success get all product    
    getProductFailed:
      description: Operation Failed
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: failed
              message:
                type: string
                example: failed get product